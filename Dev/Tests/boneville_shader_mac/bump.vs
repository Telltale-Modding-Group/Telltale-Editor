!!ARBvp1.0

TEMP	oPos;
ATTRIB	inPos = vertex.position;
ATTRIB	inUV = vertex.texcoord[0];
ATTRIB	inNormal = vertex.normal;
ATTRIB	inLmUV = vertex.texcoord[1];
OUTPUT	oD0 = result.color.primary;
OUTPUT	oD1 = result.color.secondary;
OUTPUT	oT0 = result.texcoord[0];
OUTPUT	oT1 = result.texcoord[1];
OUTPUT	oT2 = result.texcoord[2];
OUTPUT	oT3 = result.texcoord[3];

PARAM	MVP[4] = { program.env[0..3] };
PARAM	uv_trans[4] = { program.env[4..7] };
PARAM	invMVP[4] = { program.env[16..19] };

DP4	oPos.x, inPos, MVP[0];	
DP4	oPos.y, inPos, MVP[1];	
DP4	oPos.z, inPos, MVP[2];	
DP4	oPos.w, inPos, MVP[3];	

# Known vars:                             oD0  oD1  oT0  oT1  oT2  oT3            inPos  inUV  inNormal  inLmUV
TEMP	r0;
TEMP	r1;
TEMP	r2;
TEMP	r3;
TEMP	r5;

PARAM	specScaleAndBias = program.env[8];
PARAM	ambient = program.env[9];
PARAM	light0pi = program.env[10];
PARAM	light0ca = program.env[11];
PARAM	light1pw = program.env[12];
PARAM	light1ca = program.env[13];
PARAM	dirlightpos = program.env[14];
PARAM	dirlightcol = program.env[15];
PARAM	lightclamp = program.env[20];
PARAM	boneMaybe = program.env[21];
PARAM	bumpEyeLightPos = program.env[22];
PARAM	specularColAndScale = program.env[23];

SUB	r2.xyz, light0pi.xyzw, inPos.xyzw;	
DP3	r2.w, r2.xyzw, r2.xyzw;	
RSQ	r2.w, r2.w;	
MUL	r2.xyz, r2.xyzw, r2.w;	
DP3	r1.x, inNormal, r2;	
MAX	r1.x, r1.x, lightclamp.y;	
MUL	r2.w, r2.w, light0ca.w;	
RCP	r2.w, r2.w;	
MIN	r2.w, r2.w, lightclamp.x;	
MUL	r2.w, r2.w, r2.w;	
SUB	r2.w, lightclamp.x, r2.w;	
MUL	r2.w, r2.w, light0pi.w;	
MUL	r1.x, r1.x, r2.w;	
MUL	r0.xyz, light0ca.xyzw, r1.x;	
MUL	r5, specularColAndScale, r1.x;	
MOV	r2, specScaleAndBias;	
MUL	r5, r5, r2.w;	
MAD	r5, specularColAndScale, r2.x, r5;	
SUB	r2.xyz, light1pw.xyzw, inPos.xyzw;	
DP3	r2.w, r2.xyzw, r2.xyzw;	
RSQ	r2.w, r2.w;	
MUL	r2.xyz, r2.xyzw, r2.w;	
DP3	r1.x, inNormal, r2;	
MAX	r1.x, r1.x, lightclamp.y;	
MUL	r2.w, r2.w, light1ca.w;	
RCP	r2.w, r2.w;	
MIN	r2.w, r2.w, lightclamp.x;	
MUL	r2.w, r2.w, r2.w;	
SUB	r2.w, lightclamp.x, r2.w;	
MUL	r2.w, r2.w, light1pw.w;	
MUL	r1.x, r1.x, r2.w;	
MAD	r0.xyz, light1ca.xyzw, r1.x, r0.xyzw;	
DP3	r2.x, inNormal, dirlightpos;	
MAD	r0.xyz, dirlightcol.xyzw, r2.x, r0.xyzw;	
ADD	r0.xyz, r0.xyzw, ambient.xyzw;	
MUL	r0.xyz, r0.xyzw, lightclamp.z;	
MIN	r0.xyz, r0.xyzw, lightclamp.x;	
MAX	r0.xyz, r0.xyzw, lightclamp.y;	
MOV	oD0.xyz, r0.xyzw;	
MOV	oD0.w, lightclamp.x;	
DP4	r0.x, inUV, uv_trans[0];
DP4	r0.y, inUV, uv_trans[1];
DP4	r0.z, inUV, uv_trans[2];
DP4	r0.w, inUV, uv_trans[3];
MOV	oT0, r0;	
MOV	oT1, inLmUV;	
MOV	oT2, r0;	
DP4	r0.x, inPos, invMVP[0];
DP4	r0.y, inPos, invMVP[1];
DP4	r0.z, inPos, invMVP[2];
DP4	r0.w, inPos, invMVP[3];
SUB	r2, bumpEyeLightPos, r0;	
DP3	r2.w, r2.xyzw, r2.xyzw;	
RSQ	r2.w, r2.w;	
MUL	r2.xyz, r2.xyzw, r2.w;	
SUB	r0, r0, boneMaybe;	
DP3	r0.w, r0.xyzw, r0.xyzw;	
RSQ	r0.w, r0.w;	
MUL	r0.xyz, r0.xyzw, r0.w;	
DP3	r1.x, inNormal, invMVP[0];
DP3	r1.y, inNormal, invMVP[1];
DP3	r1.z, inNormal, invMVP[2];
DP3	r0.w, r0, r1;	
ADD	r0.w, r0.w, r0.w;	
MAD	r0.xyz, r1.xyzw, -r0.w, r0.xyzw;	
DP3	r0.w, r0.xyzw, r0.xyzw;	
RSQ	r0.w, r0.w;	
MUL	r0.xyz, r0.xyzw, r0.w;	
DP3	r0.w, r0.xyzw, r2.xyzw;	
SGE	r0.w, r0.w, lightclamp.y;	
MUL	oD1.w, r0.w, r5.w;	
MOV	r1, lightclamp.y;	
MOV	r1.x, lightclamp.x;	
MUL	r3, r1.zxyw, -r2.yzxw;	
MAD	r3, r1.yzxw, -r2.zxyw, -r3;	
DP3	r3.w, r3.xyzw, r3.xyzw;	
SGE	r2.w, r3.w, lightclamp.y;	
RSQ	r3.w, r3.w;	
MUL	r3.xyz, r3.xyzw, r3.w;	
SUB	r2.w, lightclamp.x, r2.w;	
ADD	r3.y, r3.y, r2.w;	
MUL	r1, r2.zxyw, -r3.yzxw;	
MAD	r1, r2.yzxw, -r3.zxyw, -r1;	
DP3	r1.w, r1.xyzw, r1.xyzw;	
RSQ	r1.w, r1.w;	
MUL	r1.xyz, r1.xyzw, r1.w;	
DP3	r2.x, r1.xyzw, r0.xyzw;	
DP3	r2.y, r3.xyzw, r0.xyzw;	
MAD	r0, r2, lightclamp.z, lightclamp.z;	
MOV	oT3, r0;	
          
MOV result.position, oPos;
END
